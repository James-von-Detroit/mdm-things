#!/bin/bash

# deployr
# A script to deploy macs! Built off of bootstrappr and installr

if [[ $EUID != 0 ]] ; then
    echo "deployr: Please run this as root, or via sudo."
    exit -1
fi

DMG_LOCATION="http://10.5.163.132:90/installers"

echo "*** Trend Micro Philippines Mac Deployment Workflow! ***"
# Get some info about the workflow
echo -e "What is the user's domain account username?"
read GID
echo -e "What is the tag number of this machine?"
read TAG
echo -e "Under which department will be the device deployed (IS, SAL, TS...)"
read LOCATION
echo -e "What kind of hardware is it"
DEPARTMENTS="MB MD"
arr=($DEPARTMENTS)
for DEPT in $DEPARTMENTS; do
	let INDEX1=${INDEX1}+1
	DEPARTMENTS[${INDEX1}]=${DEPT}
	echo "    ${INDEX1}  ${DEPT}"
done
read -p "Your hardware is (1-${INDEX1}): " SELECTEDINDEX
SELECTEDDEPARTMENT=${DEPARTMENTS[${SELECTEDINDEX}]}
HOSTNAME="PH-$GID-$SELECTEDDEPARTMENT"
read -p "This machine will be named $HOSTNAME. Hit any key to continue or press 'e' to edit." -n 1 -r
echo
if [[ $REPLY =~ ^[Ee]$ ]]
then
	echo -e "What is the new hostname of the machine?"
	read HOSTNAME
	echo "This machine will be now be named $HOSTNAME"
	echo
fi
INVENTORY="$(date +%Y-%m-%d) $GID"

INDEX=0
OLDIFS=$IFS
IFS=$'\n'

echo "Select the destination volume:"
for VOL in $(/bin/ls -1 /Volumes) ; do
    if [[ "${VOL}" != "OS X Base System" ]] && [[ "${VOL}" != "deploy" ]] ; then
        let INDEX=${INDEX}+1
        VOLUMES[${INDEX}]=${VOL}
        echo "    ${INDEX}  ${VOL}"
    fi
done
read -p "Install to volume # (1-${INDEX}): " SELECTEDINDEX

SELECTEDVOLUME=${VOLUMES[${SELECTEDINDEX}]}

if [[ "${SELECTEDVOLUME}" == "" ]]; then
    exit 0
fi

#### Create package for installr
create_installr_package () {
	mkdir -p "/Volumes/packages"
	current_dir="/Volumes/packages"
	cp -r /Volumes/deploy/script_package/ $current_dir
	cat  > $current_dir/tmp/Scripts/postinstall <<EOL
#!/bin/bash
defaults write /Library/Preferences/com.apple.RemoteDesktop.plist Text1 -string "$1"
defaults write /Library/Preferences/com.apple.RemoteDesktop.plist Text2 -string "$2"
defaults write /Library/Preferences/com.apple.RemoteDesktop.plist Text3 -string "$3"
defaults write /Library/Preferences/com.apple.RemoteDesktop.plist Text4 -string "$4"
/usr/sbin/scutil --set ComputerName "$5"
/usr/sbin/scutil --set LocalHostName "$5"
/usr/sbin/scutil --set HostName "$5"
EOL
	/usr/sbin/pkgutil --flatten $current_dir/tmp/ $current_dir/script.pkg
	/Volumes/deploy/script_package/productbuild -p $current_dir/script.pkg /Volumes/final_script.pkg
	rm -rf $current_dir/
}

##### Installr!
installr () {
  echo "$4/$2.dmg"
	/usr/bin/hdiutil attach "$4/$2.dmg";
	BASENAME=${0##*/}
	THISDIR=${0%$BASENAME}
	PACKAGESDIR="${THISDIR}packages"
	VOLUME="/Volumes/$1/"
	INSTALLMACOSAPP=$(echo "${VOLUME}Install macOS"*.app)
	STARTOSINSTALL=$(echo "${VOLUME}Install macOS"*.app/Contents/Resources/startosinstall)

	if [ ! -e "$STARTOSINSTALL" ]; then
		echo "Can't find an Install macOS app containing startosinstall in this script's directory!"
		exit -1
	fi

	read -p "Erase target volume before install (y/N)? " ERASETARGET

	case ${ERASETARGET:0:1} in
		[yY] ) /usr/sbin/diskutil reformat "/Volumes/${3}" ;;
		* ) echo ;;
	esac

	echo
	echo "Installing macOS to /Volumes/${3}..."

	# build our startosinstall command
	CMD="\"${STARTOSINSTALL}\" --agreetolicense --volume \"/Volumes/${3}\" --installpackage /Volumes/final_script.pkg"

	for ITEM in "${PACKAGESDIR}"/* ; do
		FILENAME="${ITEM##*/}"
		EXTENSION="${FILENAME##*.}"
		if [[ -e ${ITEM} ]]; then
			case ${EXTENSION} in
				pkg ) CMD="${CMD} --installpackage \"${ITEM}\"" ;;
				* ) echo "    ignoring non-package ${ITEM}..." ;;
			esac
		fi
	done

	# kick off the OS install
	eval $CMD
}

clean_install () {
  echo "$4/$2.dmg"
	/usr/bin/hdiutil attach "$4/$2.dmg";
	BASENAME=${0##*/}
	THISDIR=${0%$BASENAME}
	PACKAGESDIR="${THISDIR}packages"
	VOLUME="/Volumes/$1/"
	INSTALLMACOSAPP=$(echo "${VOLUME}Install macOS"*.app)
	STARTOSINSTALL=$(echo "${VOLUME}Install macOS"*.app/Contents/Resources/startosinstall)

	if [ ! -e "$STARTOSINSTALL" ]; then
		echo "Can't find an Install macOS app containing startosinstall in this script's directory!"
		exit -1
	fi

	read -p "Erase target volume before install (y/N)? " ERASETARGET

	case ${ERASETARGET:0:1} in
		[yY] ) /usr/sbin/diskutil reformat "/Volumes/${3}" ;;
		* ) echo ;;
	esac

	echo
	echo "Installing macOS to /Volumes/${3}..."

	# build our startosinstall command
	CMD="\"${STARTOSINSTALL}\" --agreetolicense --volume \"/Volumes/${3}\""

	# kick off the OS install
	eval $CMD
}

option1="Bootstrap machine with preinstalled OS. Will install and configure munki."
option2="Install High Sierra and bootstrap munki."
option3="Install Mojave and bootstrap munki."
option4="Clean install Mojave"
title="Select your workflow"
prompt="Pick an option:"
options=("$option1" "$option2" "$option3", "$option4")

echo "$title"
PS3="$prompt "
select opt in "${options[@]}" "Quit"; do

    case "$REPLY" in

    1 ) echo "You picked $opt";
	create_installr_package "$TAG" "$LOCATION" "$INVENTORY" "$SELECTEDDEPARTMENT" "$HOSTNAME"
# 	defaults write /Volumes/${SELECTEDVOLUME}/Library/Preferences/com.apple.RemoteDesktop.plist Text1 -string "$TAG"
# 	defaults write /Volumes/${SELECTEDVOLUME}/Library/Preferences/com.apple.RemoteDesktop.plist Text2 -string "$LOCATION"
# 	defaults write /Volumes/${SELECTEDVOLUME}/Library/Preferences/com.apple.RemoteDesktop.plist Text3 -string "$INVENTORY"
# 	defaults write /Volumes/${SELECTEDVOLUME}/Library/Preferences/com.apple.RemoteDesktop.plist Text4 -string "$DEPARTMENT"
	OUTSET="/Volumes/${SELECTEDVOLUME}/usr/local/outset/boot-once"
	mkdir -p $OUTSET
# 	cat  > $OUTSET/name.sh <<EOL
# #!/bin/bash
# /usr/sbin/scutil --set ComputerName "$HOSTNAME"
# /usr/sbin/scutil --set LocalHostName "$HOSTNAME"
# /usr/sbin/scutil --set HostName "$HOSTNAME"
# EOL
# 	chmod 755 $OUTSET/name.sh
	echo
	echo "Installing packages to /Volumes/${SELECTEDVOLUME}..."
	BASENAME=${0##*/}
	THISDIR=${0%$BASENAME}
	PACKAGESDIR="${THISDIR}outset-packages"
	
	# September 2019
	# install outset pkg to the target volume
	# Install name pkg to the target volume
	/usr/sbin/installer -pkg "outset.pkg" -target "/Volumes/${SELECTEDVOLUME}"
	/usr/sbin/installer -pkg "/Volumes/final_script.pkg" -target "/Volumes/${SELECTEDVOLUME}"
	for ITEM in "${PACKAGESDIR}"/* ; do
		FILENAME="${ITEM##*/}"
		EXTENSION="${FILENAME##*.}"
		if [[ -e ${ITEM} ]]; then
			case ${EXTENSION} in
				sh )
					if [[ -x ${ITEM} ]]; then
						echo "running script:  ${FILENAME}"
						# pass the selected volume to the script as $1
						${ITEM} "/Volumes/${SELECTEDVOLUME}"
					else
						echo "${FILENAME} is not executable"
					fi
					;;
				pkg )
					echo "install package: ${FILENAME}"
					# September 2019
					# Allow outset boot-once to handle installation
					/usr/sbin/installer -pkg "${ITEM}" -target "/Volumes/${SELECTEDVOLUME}"
					cp $ITEM $OUTSET 
					;;
				* ) echo "unsupported file extension: ${ITEM}" ;;
			esac
		fi
	done
	echo
	echo "Packages installed. What now?"
	echo "    1  Restart"
	echo "    2  Shut down"
	echo "    3  Quit"
	read -p "Pick an action # (1-3): " WHATNOW

	case $WHATNOW in
		1 ) /sbin/shutdown -r now ;;
		2 ) /sbin/shutdown -h now ;;
		3 ) echo ;;
	esac
	break;;
    2 ) echo "You picked $opt";
    OS="Install macOS High Sierra"
    NAME=Install_macOS_High_Sierra
	create_installr_package "$TAG" "$LOCATION" "$INVENTORY" "$SELECTEDDEPARTMENT" "$HOSTNAME"
	installr "$OS" "$NAME" "$SELECTEDVOLUME" "$DMG_LOCATION"
	break;;
    3 ) echo "You picked $opt";
    OS="Install macOS Mojave"
    NAME=Install_macOS_Mojave
	create_installr_package "$TAG" "$LOCATION" "$INVENTORY" "$SELECTEDDEPARTMENT" "$HOSTNAME"
	installr "$OS" "$NAME" "$SELECTEDVOLUME" "$DMG_LOCATION"
	break;;
    4 ) echo "You picked $opt";
    OS="Install macOS Mojave"
    NAME=Install_macOS_Mojave
	clean_install "$OS" "$NAME" "$SELECTEDVOLUME" "$DMG_LOCATION"
	break;;
    $(( ${#options[@]}+1 )) ) echo "Goodbye!"; exit 0;;
    *) echo "Invalid option. Try another one.";continue;;

    esac

done
